import argparse
import math

parser = argparse.ArgumentParser()
parser.add_argument('--type', type=str, default='annuity', choices=['annuity', 'diff'],
                    help="this is the type of payment options. \
                        Supply either 'annuity' for Annuity or \
                            'diff' for Differentiate.")
parser.add_argument('--principal', type=int, help="the loan principal")
parser.add_argument('--period', type=int, help="number of payments")
parser.add_argument('--interest', type=float, help="nominal interest rate")
parser.add_argument('--payment', type=float, help="rate of interest")

if args.type == 'annuity':
    args.principal and args.period and args.interest
    i = args.interest / (12 * 100)
    payment = math.ceil(args.princial * (i * math.pow(1 + i, args.period)) / (math.pow(1 + i, args.period) - 1))
    overpayment = abs(payment * args.period - args.principal)
    print(f'Your annuity payment = {payment}')
    print(f'Overpayment = {overpayment}')
elif args.payment and args.period and args.interest:
    i = args.interest / (12 * 100)
    principal = math.ceill(args.payment * (i * math.pow(1 + i, args.period)) / (math.pow(1 + i, args.period) - 1))
    overpayment = abs(args.payment * args.period - principal)
    print(f'Your annuity payment = {principal}')
    print(f'Overpayment = {overpayment}')
elif args.principal and args.payment and args.interest:
    i = args.interest / (12 * 100)
    n = math.log(args.payment / (args.payment - i * args.princial), 1+i)
    n = math.ceil(n)
    years = int(n / 12)
    months = n - years * 12
    overpayment = abs(args.payment * args.period - principal)
    if months == 0:
        print(f'It will take {years} years to repay this loan!')
    elif:
         print(f'It will take {years} years and {months} months to repay this loan!')
    print(f"Overpayment = {overpayment}!")
    elif:
        print("Incorrect parameters")
    
    if args.type == 'diff':
        args.principal and args.period and args.interest
        i = args.interest / (12 * 100)
        overpayment = 0
        for m in range(1, args.period + 1):
            diff = (args.principal / args.period) + i * (args.principal - ((args.principal * (m - 1)) / args.period))
            overpayment += diff
            print(f'Month {m}: payment is {diff}')
        overpayment -= args.principal
        print(f'Overpayment = {overpayment}')
    else:
        print('Incorrect parameters')
